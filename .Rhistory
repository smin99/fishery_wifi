source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
has_number(paste(test_for_RemoveDigits))
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
paste(RemoveDigits(c("INFO 201", "CSE 142", "mps-803c")))
paste("fdnjskafjdk","fjdksjfal;djk","fjdksjlfa")
paste(test_for_RemoveDigits)
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
source('~/Desktop/Class/AU2018/INFO201/Assignments/a2-core-programming-ktw0222/assignment.R')
install.packages("babynames")
library(babynames)
head((babynames))
babynames
babynames("Kevin")
babynames(year=1998)
boys <- babynames[babynames$sex =="M"]
boys <- babynames[babynames$sex =="M",]
boys
year_1998 <- boys[boys$year=="1998",]
year_1998
Kevins <- babynames[babynames$name=="Kevin",]
Kevins
Kevins[babynames$n==which.max(n),]
Kevins_2000 <- Kevins[Kevins$year=="2000",]
Kevins_2000
girls <- babynames[babynames$sex=="F",]
with(Kevins,year[which.max(n)])
with(babynames,name["Kevin"] && year[which.max(n)])
with(babynames,name["Kevin"] && year[which.max(n)])
filter(babynames, name=="Kevin")
filter(babynames, name =="Kevin")
install.packages(dpl
)
install.packages("dplyr")
library(dolyr)
source('~/.active-rstudio-document', echo=TRUE)
head(diamonds)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(economics)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages(maps))
install.packages(maps)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("maps")
library(maps)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(us)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?topo.colors
?gradient
?gradient()
?scale_fill_gradient()
library(shiny)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
shiny::runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222/Assignment8')
runApp('Desktop/Class/AU2018/INFO201/Assignments/a8-app-ktw0222')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("mapdata")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(states)
source('~/.active-rstudio-document', echo=TRUE)
shiny::runApp('Desktop/Class/AU2018/INFO201/Assignments/final project')
View(states %>% group_by(region) %>% count())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(states)
source('~/.active-rstudio-document', echo=TRUE)
runApp('Desktop/Class/AU2018/INFO201/Assignments/final project/final_project')
tates_data <- map_data("state") %>% group_by(region) %>% count()
states <- states_data[, "region"]
states_data <- map_data("state") %>% group_by(region) %>% count()
states <- states_data[, "region"]
states
states <- as.vector(states_data[, "region"])
states
runApp('Desktop/Class/AU2018/INFO201/Assignments/final project/final_project')
states <- as.character(as.vector(states_data[, "region"]))
states
states <- as.vector(states_data[, "region"])
class(states)
states <- states_data[, "region"]
class(states)
states <- states_data$region
class(states)
states
getwd
getwd()
setwd("Desktop/Class/AU2018/INFO201/Assignments/fishery_wifi/")
states <- read.csv("states_filtered.csv")
View(states)
states <- states[order(state$x),]
states <- states[order(states$x),]
runApp()
states <- states[order(states$x),]
states <- states[order(states$x),]
states <- read.csv("states_filtered.csv")
states <- states[order(states$x),]
class(states)
states <- read.csv("states_filtered.csv", stringsAsFactors = FALSE)
states <- states[order(states$x),]
class(states)
runApp()
runApp()
runApp()
runApp()
FCC_data <- fread("data_filtered.csv")
runApp()
library(shiny)
library(data.table)
FCC_data <- fread("data_filtered.csv", stringsAsFactors = FALSE)
shinyServer(function(input, output) {
output$distPlot <- renderPlot({
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
})
View(FCC_data)
filtered_FCC <- FCC_data %>% filter(StateAbbr == Input$selected_state) %>%
select(MaxAdDown)
range_1_10 <- filtered_FCC %>% filter(MaxAdDown >= 1 & MaxAdDown < 10)
range_10_100 <- filtered_FCC %>% filter(MaxAdDown >= 10 & MaxAdDown < 100)
range_100_1000 <- filtered_FCC %>% filter(MaxAdDown >= 100 & MaxAdDown < 1000)
range_1000_more <- filtered_FCC %>% filter(MaxAdDown >= 1000)
range_name <- c("1-10 mbps", "10-100 mbps", "100-1000 mbps", "1000+ mbps")
range_value <- c( range_1_10,  range_10_100,  range_100_1000,  range_1000_more)
range_data <- data.frame(range_name, range_value)
runApp()
runApp()
runApp()
runApp()
runApp()
filtered_FCC <- FCC_data %>% filter(StateAbbr == WA) %>%
select(MaxAdDown)
range_1_10 <- filtered_FCC %>% filter(MaxAdDown >= 1 & MaxAdDown < 10)
range_10_100 <- filtered_FCC %>% filter(MaxAdDown >= 10 & MaxAdDown < 100)
range_100_1000 <- filtered_FCC %>% filter(MaxAdDown >= 100 & MaxAdDown < 1000)
range_1000_more <- filtered_FCC %>% filter(MaxAdDown >= 1000)
range_name <- c("1-10 mbps", "10-100 mbps", "100-1000 mbps", "1000+ mbps")
range_value <- c(range_1_10,  range_10_100,  range_100_1000,  range_1000_more)
range_data <- data.frame(range_name, range_value)
range_data <- range_data %>% rename(range = range_name) %>%
rename(value = range_value)
ggplot(range_data, aes(x="", y=value, fill=range))+
geom_bar(width = 2, stat = "identity", color = "black") +
coord_polar("y", start=0) +
ggtitle("Total Sightings of each UFO shapes") +
theme(plot.title = element_text(size=22))
filtered_FCC <- FCC_data %>% filter(StateAbbr == “WA”) %>%
select(MaxAdDown)
range_1_10 <- filtered_FCC %>% filter(MaxAdDown >= 1 & MaxAdDown < 10)
range_10_100 <- filtered_FCC %>% filter(MaxAdDown >= 10 & MaxAdDown < 100)
range_100_1000 <- filtered_FCC %>% filter(MaxAdDown >= 100 & MaxAdDown < 1000)
range_1000_more <- filtered_FCC %>% filter(MaxAdDown >= 1000)
range_name <- c("1-10 mbps", "10-100 mbps", "100-1000 mbps", "1000+ mbps")
range_value <- c(range_1_10,  range_10_100,  range_100_1000,  range_1000_more)
range_data <- data.frame(range_name, range_value)
range_data <- range_data %>% rename(range = range_name) %>%
rename(value = range_value)
ggplot(range_data, aes(x="", y=value, fill=range))+
geom_bar(width = 2, stat = "identity", color = "black") +
coord_polar("y", start=0) +
ggtitle("Total Sightings of each UFO shapes") +
theme(plot.title = element_text(size=22))
filtered_FCC <- FCC_data %>% filter(StateAbbr == "WA") %>%
select(MaxAdDown)
range_1_10 <- filtered_FCC %>% filter(MaxAdDown >= 1 & MaxAdDown < 10)
range_10_100 <- filtered_FCC %>% filter(MaxAdDown >= 10 & MaxAdDown < 100)
range_100_1000 <- filtered_FCC %>% filter(MaxAdDown >= 100 & MaxAdDown < 1000)
range_1000_more <- filtered_FCC %>% filter(MaxAdDown >= 1000)
range_name <- c("1-10 mbps", "10-100 mbps", "100-1000 mbps", "1000+ mbps")
range_value <- c(range_1_10,  range_10_100,  range_100_1000,  range_1000_more)
range_data <- data.frame(range_name, range_value)
range_data <- range_data %>% rename(range = range_name) %>%
rename(value = range_value)
ggplot(range_data, aes(x="", y=value, fill=range))+
geom_bar(width = 2, stat = "identity", color = "black") +
coord_polar("y", start=0) +
ggtitle("Total Sightings of each UFO shapes") +
theme(plot.title = element_text(size=22))
runApp()
filtered_FCC <- FCC_data %>% filter(StateAbbr == "WA") %>%
select(MaxAdDown)
range_1_10 <- filtered_FCC %>% filter(MaxAdDown >= 1 & MaxAdDown < 10) %>% nrow()
range_10_100 <- filtered_FCC %>% filter(MaxAdDown >= 10 & MaxAdDown < 100) %>% nrow()
range_100_1000 <- filtered_FCC %>% filter(MaxAdDown >= 100 & MaxAdDown < 1000) %>% nrow()
range_1000_more <- filtered_FCC %>% filter(MaxAdDown >= 1000) %>% nrow()
range_name <- c("1-10 mbps", "10-100 mbps", "100-1000 mbps", "1000+ mbps")
range_value <- c(range_1_10,  range_10_100,  range_100_1000,  range_1000_more)
range_data <- data.frame(range_name, range_value)
range_data <- range_data %>% rename(range = range_name) %>%
rename(value = range_value)
ggplot(range_data, aes(x="", y=value, fill=range))+
geom_bar(width = 2, stat = "identity", color = "black") +
coord_polar("y", start=0) +
ggtitle("Total Sightings of each UFO shapes") +
theme(plot.title = element_text(size=22))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("openintro")
runApp()
state_full_name <- state2abbr("PA")
state_full_name
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
states <- map_data("state")
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
View(states)
filtered_data <- FCC_data %>% select(StateAbbr, MaxAdDown)
state_averages
states <- map_data("state")
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
filtered_data <- FCC_data %>% select(StateAbbr, MaxAdDown)
state_averages
states <- map_data("state")
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE) + theme_void()
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) + scale_fill_brewer(palette = "Set1")
guides(fill=FALSE) + theme_void()
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) + scale_fill_brewer(palette = "Set1") +
guides(fill=FALSE) + theme_void()
View(state)
View(states)
states <- states %>% mutate(state.abb[grep(region, state.name)] = region)
states <- states %>% mutate(region = state.abb[grep(region, state.name)])
state.abb[grep("New York", state.name)
print(state.abb[grep("region"New York, state.name))
states <- states %>% mutate(region = state.abb[which(state.name == region)])
runApp()
filtered_data <- FCC_data %>% select(StateAbbr, MaxAdDown)
state_averages <- filtered_data %>% group_by(StateAbbr) %>% mean()
library(dplyr)
FCC_data <- fread("data_filtered.csv", stringsAsFactors = FALSE)
filtered_data <- FCC_data %>% select(StateName, MaxAdDown)
state_averages <- filtered_data %>% group_by(StateName) %>% mean(MaxAdDown)
state_median <- filtered_data %>% group_by(StateName) %>% summarize(median = median(MaxAdDown))
View(state_median)
library(dplyr)
states <- states %>% add_column(median_of_state)
library(dplyr)
states <- states %>% add_column()
?match
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = percentile, group = group), color = "white") +
coord_fixed(1.3) + theme_void()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Desktop/Class/AU2018/INFO201/Assignments/fishery_wifi/graphs.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Desktop/Class/AU2018/INFO201/Assignments/fishery_wifi/graphs.R', echo=TRUE)
runApp()
runApp()
runApp()
? scale_fill_gradientn
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
ggplot(graphing_data, aes(x = Type, y = Average.Speed, fill = Type)) + geom_bar(stat="identity") +
coord_flip()  + scale_fill_brewer(palette="YlGnBu") +
ggtitle("Median AdvertisedSpeed of Each Mode of Service") +
theme(plot.title = element_text(size=22))
runApp('scripts')
runApp('scripts')
runApp('scripts')
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = Mbps, group = group), color = "white") +
coord_fixed(1.3) +
scale_fill_gradient2(low = "yellow", high = "red") +
ggtitle(paste0("National Mean Advertised Internet ", graph_name, " Speed")) +
theme(plot.title = element_text(size=22))
runApp('scripts')
help("selectInput")
runApp('scripts')
ggplot(range_data, aes(x="", y=value, fill=range))+
geom_bar(width = 2, stat = "identity", color = "black") +
coord_polar("y", start=0) +
ggtitle(paste0("Advertised Speed Categories in ", state)) +
scale_fill_brewer(palette = "Set1") +
theme_void() +
theme(plot.title = element_text(size=22))
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
